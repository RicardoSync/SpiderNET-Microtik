/*
 * Click nbfs://nbhost/SystemFileSystem/Templates/Licenses/license-default.txt to change this license
 * Click nbfs://nbhost/SystemFileSystem/Templates/GUIForms/JInternalFrame.java to edit this template
 */
package GoogleMaps;
import Config.Conexion;
import Config.Consultas;
import Config.DeleteDatos;
import java.sql.Connection;
import javax.swing.JOptionPane;
import java.sql.Statement;
import java.sql.ResultSet;
import java.sql.SQLException;
import javax.swing.table.DefaultTableModel;
import Recibos.pagoWindows;
import java.awt.Color;
import java.net.ConnectException;
import java.sql.*;
import microtik.cambioVelocidad;
import microtik.lucifer;
import Config.UpdateDatos;
import antenas.NavegadorUtil;
import java.util.ArrayList;
import java.util.List;
import java.util.Map;
import java.util.logging.Level;
import java.util.logging.Logger;
import java.util.stream.Collectors;
import javax.swing.JComboBox;
import javax.swing.RowFilter;
import javax.swing.table.TableRowSorter;
import me.legrange.mikrotik.ApiConnectionException;
import microtik.PPoEAuto;
import microtik.actualizaQueueTask;
import microtik.simpleQueue;
import microtik.taskMicrotik;
import microtik.testConnectionAsync;
/**
 *
 * @author ricardo
 */
public class GoogleMapsMultiples extends javax.swing.JInternalFrame {

    /**
     * Creates new form GoogleMapsMultiples
     */
    public GoogleMapsMultiples() {
        initComponents();
        mostrarClientesEnMapa();
    }
    
    private void mostrarClientesEnMapa() {
        Conexion conexion = new Conexion();
        Connection cn = conexion.getConnection();

        if (cn != null) {
            String input = JOptionPane.showInputDialog(null, "¿Cuántos clientes quieres visualizar en el mapa?", "SpiderNET", JOptionPane.QUESTION_MESSAGE);
            if (input == null || input.isBlank()) {
                return;
            }

            int limite;
            try {
                limite = Integer.parseInt(input.trim());
            } catch (NumberFormatException e) {
                JOptionPane.showMessageDialog(null, "Cantidad inválida.", "SpiderNET", JOptionPane.WARNING_MESSAGE);
                return;
            }

            List<String> coordenadas = new ArrayList<>();
            List<String> nombres = new ArrayList<>();
            PreparedStatement ps = null;
            ResultSet rs = null;

            try {
                String sql = "SELECT nombre, ubicacion_maps FROM clientes WHERE ubicacion_maps IS NOT NULL AND ubicacion_maps != '' LIMIT ?";
                ps = cn.prepareStatement(sql);
                ps.setInt(1, limite);
                rs = ps.executeQuery();

                while (rs.next()) {
                    String nombre = rs.getString("nombre");
                    String ubicacion = rs.getString("ubicacion_maps").trim();

                    if (ubicacion.matches("^\\-?\\d+(\\.\\d+)?\\s*,\\s*\\-?\\d+(\\.\\d+)?$")) {
                        coordenadas.add(ubicacion);
                        nombres.add(nombre);
                    }
                }

            } catch (SQLException e) {
                JOptionPane.showMessageDialog(null, "Error al consultar ubicaciones: " + e.getMessage(), "SpiderNET", JOptionPane.ERROR_MESSAGE);
                return;
            } finally {
                conexion.closeConnection();
            }

            if (coordenadas.isEmpty()) {
                JOptionPane.showMessageDialog(null, "No se encontraron coordenadas válidas para mostrar.", "SpiderNET", JOptionPane.INFORMATION_MESSAGE);
                return;
            }

            // Construir URL para Google Maps con ruta
            String origin = coordenadas.get(0);
            String destination = coordenadas.get(coordenadas.size() - 1);
            String waypoints = coordenadas.stream()
                    .skip(1)
                    .limit(coordenadas.size() - 2)
                    .collect(Collectors.joining("|"));

            String url = "https://www.google.com/maps/dir/?api=1"
                    + "&origin=" + origin
                    + "&destination=" + destination;

            if (!waypoints.isBlank()) {
                url += "&waypoints=" + waypoints;
            }


        } else {
            JOptionPane.showMessageDialog(null, "No se pudo conectar a la base de datos.", "SpiderNET", JOptionPane.ERROR_MESSAGE);
        }
    }
    /**
     * This method is called from within the constructor to initialize the form.
     * WARNING: Do NOT modify this code. The content of this method is always
     * regenerated by the Form Editor.
     */
    @SuppressWarnings("unchecked")
    // <editor-fold defaultstate="collapsed" desc="Generated Code">//GEN-BEGIN:initComponents
    private void initComponents() {

        jPanel1 = new javax.swing.JPanel();

        javax.swing.GroupLayout jPanel1Layout = new javax.swing.GroupLayout(jPanel1);
        jPanel1.setLayout(jPanel1Layout);
        jPanel1Layout.setHorizontalGroup(
            jPanel1Layout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)
            .addGap(0, 802, Short.MAX_VALUE)
        );
        jPanel1Layout.setVerticalGroup(
            jPanel1Layout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)
            .addGap(0, 493, Short.MAX_VALUE)
        );

        javax.swing.GroupLayout layout = new javax.swing.GroupLayout(getContentPane());
        getContentPane().setLayout(layout);
        layout.setHorizontalGroup(
            layout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)
            .addComponent(jPanel1, javax.swing.GroupLayout.DEFAULT_SIZE, javax.swing.GroupLayout.DEFAULT_SIZE, Short.MAX_VALUE)
        );
        layout.setVerticalGroup(
            layout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)
            .addComponent(jPanel1, javax.swing.GroupLayout.DEFAULT_SIZE, javax.swing.GroupLayout.DEFAULT_SIZE, Short.MAX_VALUE)
        );

        pack();
    }// </editor-fold>//GEN-END:initComponents


    // Variables declaration - do not modify//GEN-BEGIN:variables
    private javax.swing.JPanel jPanel1;
    // End of variables declaration//GEN-END:variables
}
