/*
 * Click nbfs://nbhost/SystemFileSystem/Templates/Licenses/license-default.txt to change this license
 * Click nbfs://nbhost/SystemFileSystem/Templates/GUIForms/JInternalFrame.java to edit this template
 */
package morty.Vustas;

import EnlaceWeb.abrirEnlace;

/**
 *
 * @author ricardo
 */
public class informacion extends javax.swing.JInternalFrame {

    /**
     * Creates new form informacion
     */
    public informacion() {
        initComponents();
    }

    /**
     * This method is called from within the constructor to initialize the form.
     * WARNING: Do NOT modify this code. The content of this method is always
     * regenerated by the Form Editor.
     */
    @SuppressWarnings("unchecked")
    // <editor-fold defaultstate="collapsed" desc="Generated Code">//GEN-BEGIN:initComponents
    private void initComponents() {

        jPanel1 = new javax.swing.JPanel();
        jLabel1 = new javax.swing.JLabel();
        jScrollPane1 = new javax.swing.JScrollPane();
        jTextArea1 = new javax.swing.JTextArea();
        jButton4 = new javax.swing.JButton();
        jButton5 = new javax.swing.JButton();

        setClosable(true);
        setResizable(true);
        setTitle("Informacion");

        jPanel1.setBorder(new javax.swing.border.SoftBevelBorder(javax.swing.border.BevelBorder.RAISED));

        jLabel1.setIcon(new javax.swing.ImageIcon(getClass().getResource("/img/logo_64x64.png"))); // NOI18N

        jTextArea1.setEditable(false);
        jTextArea1.setColumns(20);
        jTextArea1.setRows(5);
        jTextArea1.setText("üîß AdmiNET Local - Sistema de Gesti√≥n para WISP e ISP\n\nDesarrollado por: Ricardo Escobedo  \nEmpresa: DOBLENET - Soluciones en conectividad  \nVersi√≥n actual: 1.9.0\nFecha de lanzamiento: Abril del  2025\n\nüß† Descripci√≥n:\nAdmiNET Local es un software dise√±ado para automatizar y optimizar la administraci√≥n de peque√±os y medianos WISP/ISP.  \nGestiona clientes, pagos, cortes, equipos, y se integra con MikroTik para ofrecer control total de la red.\n\nüìå Funciones principales:\n‚Ä¢ Registro y gesti√≥n de clientes (activos, suspendidos, bloqueados)  \n‚Ä¢ Administraci√≥n de pagos, egresos y cortes de caja  \n‚Ä¢ Automatizaci√≥n de suspensiones/activaciones v√≠a Simple Queue o PPPoE  \n‚Ä¢ Sincronizaci√≥n con MikroTik (queues, hotspot, DHCP leases, etc.)  \n‚Ä¢ Creaci√≥n de fichas hotspot y tickets imprimibles  \n‚Ä¢ Control de usuarios, empresa y base de datos  \n‚Ä¢ Dise√±o moderno y accesible, compatible con temas oscuros o personalizados\n\nüîê Licencia de uso:\nEste software est√° licenciado exclusivamente para el uso del comprador.  \nProhibida su copia, redistribuci√≥n o modificaci√≥n sin autorizaci√≥n expresa.  \nCada instalaci√≥n requiere activaci√≥n √∫nica por parte del desarrollador.\n\nüõ† Tecnolog√≠as utilizadas:\n‚Ä¢ Java SE  \n‚Ä¢ MySQL  \n‚Ä¢ JDBC  \n‚Ä¢ FlatLaf  \n‚Ä¢ MikroTik API + SSH  \n‚Ä¢ JasperReports\n\nüéØ Visi√≥n:\nCrear una plataforma robusta, est√©tica y funcional que permita a los WISP gestionar su red y sus clientes de forma r√°pida, eficiente y profesional.  \nUn software pensado para negocios reales, con necesidades reales.\n\nüì© Soporte t√©cnico:\n¬øTienes dudas, necesitas soporte o quieres actualizar tu versi√≥n?\n‚Ä¢ WhatsApp: +52 498 144 22 66  \n‚Ä¢ Correo: softwareescobedo@gmail.com  \n‚Ä¢ Facebook: Software Escobedo\n\nüöß Pr√≥ximas funciones:\n‚Ä¢ Panel web para clientes con acceso a historial y estado de su servicio  \n‚Ä¢ App Android personalizada con logo y nombre del WISP  \n‚Ä¢ Monitoreo de tr√°fico en tiempo real  \n‚Ä¢ Soporte para routers Ubiquiti, TP-Link y m√°s\n\nGracias por ser parte de DOBLENET y confiar en AdmiNET.");
        jScrollPane1.setViewportView(jTextArea1);
        jTextArea1.setLineWrap(true);
        jTextArea1.setWrapStyleWord(true);

        jButton4.setIcon(new javax.swing.ImageIcon(getClass().getResource("/img/tik-tok.png"))); // NOI18N
        jButton4.setText("TikTok");
        jButton4.addActionListener(new java.awt.event.ActionListener() {
            public void actionPerformed(java.awt.event.ActionEvent evt) {
                jButton4ActionPerformed(evt);
            }
        });

        jButton5.setIcon(new javax.swing.ImageIcon(getClass().getResource("/img/facebook.png"))); // NOI18N
        jButton5.setText("Facebook");
        jButton5.addActionListener(new java.awt.event.ActionListener() {
            public void actionPerformed(java.awt.event.ActionEvent evt) {
                jButton5ActionPerformed(evt);
            }
        });

        javax.swing.GroupLayout jPanel1Layout = new javax.swing.GroupLayout(jPanel1);
        jPanel1.setLayout(jPanel1Layout);
        jPanel1Layout.setHorizontalGroup(
            jPanel1Layout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)
            .addGroup(jPanel1Layout.createSequentialGroup()
                .addContainerGap()
                .addGroup(jPanel1Layout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)
                    .addComponent(jLabel1)
                    .addComponent(jButton4, javax.swing.GroupLayout.DEFAULT_SIZE, javax.swing.GroupLayout.DEFAULT_SIZE, Short.MAX_VALUE)
                    .addComponent(jButton5, javax.swing.GroupLayout.DEFAULT_SIZE, javax.swing.GroupLayout.DEFAULT_SIZE, Short.MAX_VALUE))
                .addPreferredGap(javax.swing.LayoutStyle.ComponentPlacement.RELATED)
                .addComponent(jScrollPane1, javax.swing.GroupLayout.DEFAULT_SIZE, 545, Short.MAX_VALUE)
                .addContainerGap())
        );
        jPanel1Layout.setVerticalGroup(
            jPanel1Layout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)
            .addGroup(jPanel1Layout.createSequentialGroup()
                .addContainerGap()
                .addGroup(jPanel1Layout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)
                    .addGroup(jPanel1Layout.createSequentialGroup()
                        .addComponent(jLabel1)
                        .addPreferredGap(javax.swing.LayoutStyle.ComponentPlacement.RELATED)
                        .addComponent(jButton4)
                        .addPreferredGap(javax.swing.LayoutStyle.ComponentPlacement.UNRELATED)
                        .addComponent(jButton5)
                        .addGap(0, 35, Short.MAX_VALUE))
                    .addComponent(jScrollPane1))
                .addContainerGap())
        );

        javax.swing.GroupLayout layout = new javax.swing.GroupLayout(getContentPane());
        getContentPane().setLayout(layout);
        layout.setHorizontalGroup(
            layout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)
            .addComponent(jPanel1, javax.swing.GroupLayout.DEFAULT_SIZE, javax.swing.GroupLayout.DEFAULT_SIZE, Short.MAX_VALUE)
        );
        layout.setVerticalGroup(
            layout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)
            .addComponent(jPanel1, javax.swing.GroupLayout.DEFAULT_SIZE, javax.swing.GroupLayout.DEFAULT_SIZE, Short.MAX_VALUE)
        );

        pack();
    }// </editor-fold>//GEN-END:initComponents

    private void jButton4ActionPerformed(java.awt.event.ActionEvent evt) {//GEN-FIRST:event_jButton4ActionPerformed
        abrirEnlace e = new abrirEnlace();
        e.abrirTikTok();
        // TODO add your handling code here:
    }//GEN-LAST:event_jButton4ActionPerformed

    private void jButton5ActionPerformed(java.awt.event.ActionEvent evt) {//GEN-FIRST:event_jButton5ActionPerformed
        abrirEnlace e = new abrirEnlace();
        e.abrirFacebook();
        // TODO add your handling code here:
    }//GEN-LAST:event_jButton5ActionPerformed


    // Variables declaration - do not modify//GEN-BEGIN:variables
    private javax.swing.JButton jButton4;
    private javax.swing.JButton jButton5;
    private javax.swing.JLabel jLabel1;
    private javax.swing.JPanel jPanel1;
    private javax.swing.JScrollPane jScrollPane1;
    private javax.swing.JTextArea jTextArea1;
    // End of variables declaration//GEN-END:variables
}
