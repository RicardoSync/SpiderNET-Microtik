/*
 * Click nbfs://nbhost/SystemFileSystem/Templates/Licenses/license-default.txt to change this license
 * Click nbfs://nbhost/SystemFileSystem/Templates/GUIForms/JInternalFrame.java to edit this template
 */
package caja;

import Config.Conexion;
import java.awt.Color;
import java.sql.Connection;
import java.sql.PreparedStatement;
import java.sql.ResultSet;
import java.sql.SQLException;
import java.time.YearMonth;
import java.util.logging.Level;
import java.util.logging.Logger;
import javax.swing.JOptionPane;
import javax.swing.table.DefaultTableModel;

/**
 *
 * @author cisco
 */
public class corteCaja extends javax.swing.JInternalFrame {

    /**
     * Creates new form corteCaja
     */
    public corteCaja() {
        initComponents();
        listarEquipos();
    }

    /**
     * This method is called from within the constructor to initialize the form.
     * WARNING: Do NOT modify this code. The content of this method is always
     * regenerated by the Form Editor.
     */
    @SuppressWarnings("unchecked")
    // <editor-fold defaultstate="collapsed" desc="Generated Code">//GEN-BEGIN:initComponents
    private void initComponents() {

        jPanel1 = new javax.swing.JPanel();
        jLabel1 = new javax.swing.JLabel();
        comboMesInicio = new javax.swing.JComboBox<>();
        entryAnnioInicio = new javax.swing.JTextField();
        jLabel2 = new javax.swing.JLabel();
        comboMesFin = new javax.swing.JComboBox<>();
        entryAnnioFin = new javax.swing.JTextField();
        jButton1 = new javax.swing.JButton();
        jPanel2 = new javax.swing.JPanel();
        jLabel3 = new javax.swing.JLabel();
        entryIngresosTotales = new javax.swing.JTextField();
        jLabel4 = new javax.swing.JLabel();
        entryEgresosTotales = new javax.swing.JTextField();
        jLabel5 = new javax.swing.JLabel();
        entryBalanceFinal = new javax.swing.JTextField();
        jButton2 = new javax.swing.JButton();
        jButton3 = new javax.swing.JButton();
        jPanel3 = new javax.swing.JPanel();
        jScrollPane1 = new javax.swing.JScrollPane();
        jTable1 = new javax.swing.JTable();

        setClosable(true);
        setIconifiable(true);
        setTitle("Corte Caja");

        jPanel1.setBorder(javax.swing.BorderFactory.createTitledBorder("Barra opciones"));

        jLabel1.setText("Fecha de inicio");

        comboMesInicio.setModel(new javax.swing.DefaultComboBoxModel<>(new String[] { "1", "2", "3", "4", "5", "6", "7", "8", "9", "10", "11", "12" }));

        entryAnnioInicio.setText("2025");

        jLabel2.setText("Fecha de fin");

        comboMesFin.setModel(new javax.swing.DefaultComboBoxModel<>(new String[] { "1", "2", "3", "4", "5", "6", "7", "8", "9", "10", "11", "12" }));

        entryAnnioFin.setText("2025");

        jButton1.setIcon(new javax.swing.ImageIcon(getClass().getResource("/img/busqueda.png"))); // NOI18N
        jButton1.setText("Consultar");
        jButton1.addActionListener(new java.awt.event.ActionListener() {
            public void actionPerformed(java.awt.event.ActionEvent evt) {
                jButton1ActionPerformed(evt);
            }
        });

        javax.swing.GroupLayout jPanel1Layout = new javax.swing.GroupLayout(jPanel1);
        jPanel1.setLayout(jPanel1Layout);
        jPanel1Layout.setHorizontalGroup(
            jPanel1Layout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)
            .addGroup(jPanel1Layout.createSequentialGroup()
                .addContainerGap()
                .addComponent(jLabel1)
                .addPreferredGap(javax.swing.LayoutStyle.ComponentPlacement.RELATED)
                .addComponent(comboMesInicio, javax.swing.GroupLayout.PREFERRED_SIZE, 101, javax.swing.GroupLayout.PREFERRED_SIZE)
                .addPreferredGap(javax.swing.LayoutStyle.ComponentPlacement.RELATED)
                .addComponent(entryAnnioInicio, javax.swing.GroupLayout.PREFERRED_SIZE, 101, javax.swing.GroupLayout.PREFERRED_SIZE)
                .addPreferredGap(javax.swing.LayoutStyle.ComponentPlacement.UNRELATED)
                .addComponent(jLabel2)
                .addPreferredGap(javax.swing.LayoutStyle.ComponentPlacement.RELATED)
                .addComponent(comboMesFin, javax.swing.GroupLayout.PREFERRED_SIZE, 101, javax.swing.GroupLayout.PREFERRED_SIZE)
                .addPreferredGap(javax.swing.LayoutStyle.ComponentPlacement.RELATED)
                .addComponent(entryAnnioFin, javax.swing.GroupLayout.PREFERRED_SIZE, 101, javax.swing.GroupLayout.PREFERRED_SIZE)
                .addPreferredGap(javax.swing.LayoutStyle.ComponentPlacement.UNRELATED)
                .addComponent(jButton1, javax.swing.GroupLayout.DEFAULT_SIZE, 106, Short.MAX_VALUE)
                .addContainerGap())
        );
        jPanel1Layout.setVerticalGroup(
            jPanel1Layout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)
            .addGroup(jPanel1Layout.createSequentialGroup()
                .addGroup(jPanel1Layout.createParallelGroup(javax.swing.GroupLayout.Alignment.BASELINE)
                    .addComponent(jLabel1)
                    .addComponent(comboMesInicio, javax.swing.GroupLayout.PREFERRED_SIZE, javax.swing.GroupLayout.DEFAULT_SIZE, javax.swing.GroupLayout.PREFERRED_SIZE)
                    .addComponent(entryAnnioInicio, javax.swing.GroupLayout.PREFERRED_SIZE, javax.swing.GroupLayout.DEFAULT_SIZE, javax.swing.GroupLayout.PREFERRED_SIZE)
                    .addComponent(jLabel2)
                    .addComponent(comboMesFin, javax.swing.GroupLayout.PREFERRED_SIZE, javax.swing.GroupLayout.DEFAULT_SIZE, javax.swing.GroupLayout.PREFERRED_SIZE)
                    .addComponent(entryAnnioFin, javax.swing.GroupLayout.PREFERRED_SIZE, javax.swing.GroupLayout.DEFAULT_SIZE, javax.swing.GroupLayout.PREFERRED_SIZE)
                    .addComponent(jButton1))
                .addContainerGap(javax.swing.GroupLayout.DEFAULT_SIZE, Short.MAX_VALUE))
        );

        jPanel2.setBorder(javax.swing.BorderFactory.createTitledBorder("Datos Financieros"));

        jLabel3.setFont(new java.awt.Font("Segoe UI", 0, 18)); // NOI18N
        jLabel3.setText("Egresos Totales");

        entryIngresosTotales.setEditable(false);

        jLabel4.setFont(new java.awt.Font("Segoe UI", 0, 18)); // NOI18N
        jLabel4.setText("Ingresos Totales");

        entryEgresosTotales.setEditable(false);

        jLabel5.setFont(new java.awt.Font("Segoe UI", 0, 18)); // NOI18N
        jLabel5.setText("Balance Final");

        entryBalanceFinal.setEditable(false);

        jButton2.setIcon(new javax.swing.ImageIcon(getClass().getResource("/img/caja.png"))); // NOI18N
        jButton2.setText("Guardar corte");
        jButton2.addActionListener(new java.awt.event.ActionListener() {
            public void actionPerformed(java.awt.event.ActionEvent evt) {
                jButton2ActionPerformed(evt);
            }
        });

        jButton3.setIcon(new javax.swing.ImageIcon(getClass().getResource("/img/archivo-pdf.png"))); // NOI18N
        jButton3.setText("Exportar PDF");

        javax.swing.GroupLayout jPanel2Layout = new javax.swing.GroupLayout(jPanel2);
        jPanel2.setLayout(jPanel2Layout);
        jPanel2Layout.setHorizontalGroup(
            jPanel2Layout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)
            .addGroup(jPanel2Layout.createSequentialGroup()
                .addContainerGap()
                .addGroup(jPanel2Layout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)
                    .addComponent(entryIngresosTotales)
                    .addComponent(entryEgresosTotales)
                    .addGroup(jPanel2Layout.createSequentialGroup()
                        .addGroup(jPanel2Layout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)
                            .addComponent(jLabel4)
                            .addComponent(jLabel3)
                            .addComponent(jLabel5))
                        .addGap(0, 0, Short.MAX_VALUE))
                    .addComponent(entryBalanceFinal))
                .addContainerGap())
            .addGroup(jPanel2Layout.createSequentialGroup()
                .addGap(22, 22, 22)
                .addGroup(jPanel2Layout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)
                    .addComponent(jButton3, javax.swing.GroupLayout.PREFERRED_SIZE, 126, javax.swing.GroupLayout.PREFERRED_SIZE)
                    .addComponent(jButton2, javax.swing.GroupLayout.PREFERRED_SIZE, 126, javax.swing.GroupLayout.PREFERRED_SIZE))
                .addContainerGap(22, Short.MAX_VALUE))
        );
        jPanel2Layout.setVerticalGroup(
            jPanel2Layout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)
            .addGroup(jPanel2Layout.createSequentialGroup()
                .addComponent(jLabel4)
                .addPreferredGap(javax.swing.LayoutStyle.ComponentPlacement.RELATED)
                .addComponent(entryIngresosTotales, javax.swing.GroupLayout.PREFERRED_SIZE, javax.swing.GroupLayout.DEFAULT_SIZE, javax.swing.GroupLayout.PREFERRED_SIZE)
                .addPreferredGap(javax.swing.LayoutStyle.ComponentPlacement.RELATED)
                .addComponent(jLabel3)
                .addPreferredGap(javax.swing.LayoutStyle.ComponentPlacement.RELATED)
                .addComponent(entryEgresosTotales, javax.swing.GroupLayout.PREFERRED_SIZE, javax.swing.GroupLayout.DEFAULT_SIZE, javax.swing.GroupLayout.PREFERRED_SIZE)
                .addGap(18, 18, 18)
                .addComponent(jLabel5)
                .addPreferredGap(javax.swing.LayoutStyle.ComponentPlacement.RELATED)
                .addComponent(entryBalanceFinal, javax.swing.GroupLayout.PREFERRED_SIZE, javax.swing.GroupLayout.DEFAULT_SIZE, javax.swing.GroupLayout.PREFERRED_SIZE)
                .addPreferredGap(javax.swing.LayoutStyle.ComponentPlacement.RELATED)
                .addComponent(jButton2)
                .addGap(18, 18, 18)
                .addComponent(jButton3)
                .addGap(0, 0, Short.MAX_VALUE))
        );

        jPanel3.setBorder(javax.swing.BorderFactory.createTitledBorder("Cortes Guardados"));

        jTable1.setModel(new javax.swing.table.DefaultTableModel(
            new Object [][] {
                {null, null, null, null, null},
                {null, null, null, null, null},
                {null, null, null, null, null},
                {null, null, null, null, null}
            },
            new String [] {
                "Fecha Inicio", "Fecha Fin", "Total Ingresos", "Total Egresos", "Balance"
            }
        ));
        jScrollPane1.setViewportView(jTable1);

        javax.swing.GroupLayout jPanel3Layout = new javax.swing.GroupLayout(jPanel3);
        jPanel3.setLayout(jPanel3Layout);
        jPanel3Layout.setHorizontalGroup(
            jPanel3Layout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)
            .addGroup(jPanel3Layout.createSequentialGroup()
                .addContainerGap()
                .addComponent(jScrollPane1)
                .addContainerGap())
        );
        jPanel3Layout.setVerticalGroup(
            jPanel3Layout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)
            .addGroup(jPanel3Layout.createSequentialGroup()
                .addComponent(jScrollPane1, javax.swing.GroupLayout.DEFAULT_SIZE, 460, Short.MAX_VALUE)
                .addContainerGap())
        );

        javax.swing.GroupLayout layout = new javax.swing.GroupLayout(getContentPane());
        getContentPane().setLayout(layout);
        layout.setHorizontalGroup(
            layout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)
            .addComponent(jPanel1, javax.swing.GroupLayout.DEFAULT_SIZE, javax.swing.GroupLayout.DEFAULT_SIZE, Short.MAX_VALUE)
            .addGroup(layout.createSequentialGroup()
                .addComponent(jPanel2, javax.swing.GroupLayout.PREFERRED_SIZE, javax.swing.GroupLayout.DEFAULT_SIZE, javax.swing.GroupLayout.PREFERRED_SIZE)
                .addPreferredGap(javax.swing.LayoutStyle.ComponentPlacement.RELATED)
                .addComponent(jPanel3, javax.swing.GroupLayout.DEFAULT_SIZE, javax.swing.GroupLayout.DEFAULT_SIZE, Short.MAX_VALUE)
                .addGap(12, 12, 12))
        );
        layout.setVerticalGroup(
            layout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)
            .addGroup(layout.createSequentialGroup()
                .addComponent(jPanel1, javax.swing.GroupLayout.PREFERRED_SIZE, javax.swing.GroupLayout.DEFAULT_SIZE, javax.swing.GroupLayout.PREFERRED_SIZE)
                .addPreferredGap(javax.swing.LayoutStyle.ComponentPlacement.UNRELATED)
                .addGroup(layout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING, false)
                    .addComponent(jPanel3, javax.swing.GroupLayout.DEFAULT_SIZE, javax.swing.GroupLayout.DEFAULT_SIZE, Short.MAX_VALUE)
                    .addComponent(jPanel2, javax.swing.GroupLayout.DEFAULT_SIZE, javax.swing.GroupLayout.DEFAULT_SIZE, Short.MAX_VALUE)))
        );

        pack();
    }// </editor-fold>//GEN-END:initComponents

    private void jButton1ActionPerformed(java.awt.event.ActionEvent evt) {//GEN-FIRST:event_jButton1ActionPerformed
        int mesInicio = Integer.parseInt((String) comboMesInicio.getSelectedItem());
        int annioInicio = Integer.parseInt(entryAnnioInicio.getText());
        int mesFin = Integer.parseInt((String) comboMesFin.getSelectedItem());
        int annioFin = Integer.parseInt(entryAnnioFin.getText());
        
        try {
            filtadoYCalculo(mesInicio, annioInicio, mesFin, annioFin);
        } catch (SQLException ex) {
            Logger.getLogger(corteCaja.class.getName()).log(Level.SEVERE, null, ex);
        }
    }//GEN-LAST:event_jButton1ActionPerformed

    private void jButton2ActionPerformed(java.awt.event.ActionEvent evt) {//GEN-FIRST:event_jButton2ActionPerformed
        int mesInicio = Integer.parseInt((String) comboMesInicio.getSelectedItem());
        int annioInicio = Integer.parseInt(entryAnnioInicio.getText());
        int mesFin = Integer.parseInt((String) comboMesFin.getSelectedItem());
        int annioFin = Integer.parseInt(entryAnnioFin.getText());
        String fechaInicio = String.format("%04d-%02d-01", annioInicio, mesInicio);
        String fechaFin = String.format("%04d-%02d-%02d", annioFin, mesFin, obtenerUltimoDiaDelMes(annioFin, mesFin));
        double total_ingresos = Double.parseDouble(entryIngresosTotales.getText());
        double total_egresos = Double.parseDouble(entryEgresosTotales.getText());
        double balance = Double.parseDouble(entryBalanceFinal.getText());
        insetarCorte(fechaInicio, fechaFin, total_ingresos, total_egresos, balance);
        listarEquipos();
        
        //e(String fechaInicio, String fechaFin, double total_ingresos, double total_egresos, double balance){


    }//GEN-LAST:event_jButton2ActionPerformed


    // Variables declaration - do not modify//GEN-BEGIN:variables
    private javax.swing.JComboBox<String> comboMesFin;
    private javax.swing.JComboBox<String> comboMesInicio;
    private javax.swing.JTextField entryAnnioFin;
    private javax.swing.JTextField entryAnnioInicio;
    private javax.swing.JTextField entryBalanceFinal;
    private javax.swing.JTextField entryEgresosTotales;
    private javax.swing.JTextField entryIngresosTotales;
    private javax.swing.JButton jButton1;
    private javax.swing.JButton jButton2;
    private javax.swing.JButton jButton3;
    private javax.swing.JLabel jLabel1;
    private javax.swing.JLabel jLabel2;
    private javax.swing.JLabel jLabel3;
    private javax.swing.JLabel jLabel4;
    private javax.swing.JLabel jLabel5;
    private javax.swing.JPanel jPanel1;
    private javax.swing.JPanel jPanel2;
    private javax.swing.JPanel jPanel3;
    private javax.swing.JScrollPane jScrollPane1;
    private javax.swing.JTable jTable1;
    // End of variables declaration//GEN-END:variables

    public void filtadoYCalculo(int mesIncio, int annioInicio, int mesFin, int annioFin) throws SQLException{
        Conexion conexion = new Conexion();
        Connection cn = conexion.getConnection();
        String sql = """
                        SELECT 
                         (SELECT IFNULL(SUM(monto), 0) FROM pagos WHERE  MONTH(fecha_pago) = ? AND year(fecha_pago) = ?) AS total_ingresos,
                         (SELECT IFNULL(SUM(monto), 0) FROM egresos WHERE MONTH(fecha_egreso) = ? AND year(fecha_egreso) = ?) AS total_egresos,
                         (
                             (SELECT IFNULL(SUM(monto), 0) FROM pagos WHERE MONTH(fecha_pago) = ? AND year(fecha_pago) = ?) - 
                             (SELECT IFNULL(SUM(monto), 0) FROM egresos WHERE MONTH(fecha_egreso) = ? AND year(fecha_egreso) = ?)
                         ) AS balance
                     """;
        if(cn!=null){
            PreparedStatement cursor = cn.prepareStatement(sql);
            ResultSet resultado;
            
            try {
                // Parámetros para filtrar por rango de fechas
                cursor.setInt(1, mesIncio);
                cursor.setInt(2, annioInicio);
                cursor.setInt(3, mesIncio);
                cursor.setInt(4, annioInicio);
                cursor.setInt(5, mesFin);
                cursor.setInt(6, annioFin);
                cursor.setInt(7, mesFin);
                cursor.setInt(8, annioFin);                
                
                resultado = cursor.executeQuery();
                
                if(resultado.next()){
                    double total_ingreso = resultado.getDouble("total_ingresos");
                    double total_egresos = resultado.getDouble("total_egresos");
                    double balance = resultado.getDouble("balance");
                    
                    System.out.println("Total ingresos: " + total_ingreso + " total egresos: " + total_egresos + " balance final: " + balance);

                    entryIngresosTotales.setText(String.valueOf(total_ingreso));
                    entryEgresosTotales.setText(String.valueOf(total_egresos));
                    
                    if(balance>0){
                        entryBalanceFinal.setBackground(Color.green);
                        entryBalanceFinal.setForeground(Color.black);
                        entryBalanceFinal.setText(String.valueOf(balance));
                    }else{
                        entryBalanceFinal.setBackground(Color.red);
                        entryBalanceFinal.setForeground(Color.black);
                        entryBalanceFinal.setText(String.valueOf(balance));
                    }
                }else{
                    System.out.println("Sin informacion");
                }
            } catch (Exception e) {
                System.out.println(e);
            }
            
        }
    }

    public static int obtenerUltimoDiaDelMes(int anio, int mes) {
    return YearMonth.of(anio, mes).lengthOfMonth();
    }

    public void insetarCorte(String fechaInicio, String fechaFin, double total_ingresos, double total_egresos, double balance){
        Conexion conexion = new Conexion();
        Connection cn = conexion.getConnection();

        String sql = "INSERT INTO cortes_caja (fecha_inicio, fecha_fin, total_ingresos, total_egresos, balance) VALUES (?,?,?,?,?)";

        if (cn != null) {
            PreparedStatement cursor;
            ResultSet resultado;

            try {
                cursor = cn.prepareStatement(sql);
                cursor.setString(1, fechaInicio);
                cursor.setString(2, fechaFin);
                cursor.setDouble(3, total_ingresos);
                cursor.setDouble(4, total_egresos);
                cursor.setDouble(5, balance);

                int rows = cursor.executeUpdate();
                if (rows > 0) {
                    JOptionPane.showMessageDialog(null, "Se registro el corte de manera exitosa");
                }
            } catch (Exception e) {
                System.out.println(e);
                JOptionPane.showMessageDialog(null, "Tenemos un problema durante el registro: " + e);
            }
        }        
    }

  public void listarEquipos() {
        Conexion conexion = new Conexion();
        Connection cn = conexion.getConnection();
        DefaultTableModel modelo;
        if (cn != null) {
            PreparedStatement cursor = null;
            ResultSet resultado = null;

            try {
                modelo = (DefaultTableModel) jTable1.getModel();
                String sql = """
                             SELECT * FROM cortes_caja
                             """;
                cursor = cn.prepareStatement(sql);

                resultado = cursor.executeQuery();
                Object[] equipos = new Object[5];
                modelo.setRowCount(0);
                while (resultado.next()) {
                    equipos[0] = resultado.getInt("id");
                    equipos[1] = resultado.getString("fecha_inicio");
                    equipos[2] = resultado.getString("fecha_fin");
                    equipos[3] = resultado.getString("total_egresos");
                    equipos[4] = resultado.getString("balance");
                    modelo.addRow(equipos);
                }
                jTable1.setModel(modelo);

            } catch (SQLException e) {
                JOptionPane.showMessageDialog(null, "Error al consultar la tabla de los equipos", "SpiderNET", JOptionPane.ERROR_MESSAGE);
            }
        }
    }
}
